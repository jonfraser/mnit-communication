@using MNIT_Communication.Models
@model BaseModel

@{
    ViewBag.Title = "Raise an alert";
}
<h1>Uh oh!</h1>
<p class="lead">
    Has something gone wrong? Select the services that are currently unavailable and enter a quick note to go along to all the
    subscribers. You'll get a reminder in 50 minutes to update the status of the outage so that all users can be kept up to date.
</p>
<form class="container-fluid" ng-controller="AlertsController" ng-submit="raiseAlert()">
    <div class="row" ng-repeat="group in groupedAlertables | orderBy:'Group'">
        <div class="col-md-12">
            <h4>{{group.Group}}</h4>
            <ul class="list-unstyled list-inline">
                @*TODO - Bootstrap Toggle breaks the Angular handler*@
                @*on-finish-render="toggelize()"*@
                <li ng-repeat="alertable in group.Alertables | orderBy:'Name'" ng-click="toggleAlertable(alertable, $event)" class="col-md-4" style="margin-bottom:10px;">
                    <label class="checkbox-inline">
                        <input type="checkbox" />
                        {{alertable.Name}}
                    </label>
                </li>
            </ul>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-2">
            <label for="shortInfo">Short Info:</label>
        </div>
        <div class="col-md-8">
            <input type="text" id="shortInfo" class="form-control input-lg" ng-model="shortInfo" maxlength="140" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">
            <label for="longInfo">Long detail:</label>
        </div>
        <div class="col-md-8">
            <input type="text" id="longInfo" class="form-control input-lg" ng-model="longInfo" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-10">
            <button type="submit" class="btn btn-primary btn-lg">Raise the alarm!</button>
        </div>
    </div>
</form>

@section scripts {
    <script type="text/javascript">
        angular.module('communicationApp', [])
            .directive('onFinishRender', function ($timeout) {
                return {
                    restrict: 'A',
                    link: function (scope, element, attr) {
                        if (scope.$last === true) {
                            scope.$evalAsync(attr.onFinishRender);
                        }
                    }
                }
            })
          .controller('AlertsController', ['$scope', '$http', function ($scope, $http) {

              $scope.toggelize = function () {
                  $('li label input').bootstrapToggle({
                      on: 'Yes',
                      off: 'No'
                  });
              };

              $scope.selectedAlertables = [];

              $scope.isSelected = function(alertable) {
                  return $scope.selectedAlertables.indexOf(alertable) > -1;
              }

              $scope.toggleAlertable = function(alertable, $event) {
                  var checked = $event.target.checked;

                  var index = $scope.selectedAlertables.indexOf(alertable);

                  if (checked == false) { //Remove it, if it exists
                      if ($scope.isSelected(alertable) ) {
                          $scope.selectedAlertables.splice(index, 1);
                      }
                  } else { //Add it, if it hasn't been already
                      if (!$scope.isSelected(alertable) ) {
                          $scope.selectedAlertables.push(alertable);
                      }
                  }

                  //console.log($scope.selectedAlertables);
              }

              $scope.raiseAlert = function () {
                  var data = {
                      "AlertInfoShort": $scope.shortInfo,
                      "AlertDetail": $scope.longInfo,
                      "Alertables": $scope.selectedAlertables,
                      "RaisedById": "@Model.CurrentProfile.Id"
                  };
                  $http.post('@Url.HttpRouteUrl("DefaultApi", new { action = "Raise", controller = "Alerts"})',
                      JSON.stringify(data)).
                    success(function (data) {
                        window.location = '@Url.Action("Status")';
                    }).
                    error(function (data) { alert(data); });

              };

              $http.get('@Url.HttpRouteUrl("DefaultApi", new {action = "Get", controller = "Alertables"})').
                 success(function (data) {
                     $scope.groupedAlertables = data;
                 }).
                 error(function () { $scope.groupedAlertables = ['No alertables were retrieved from the server']; });

          }]);

    </script>
}