@using MNIT_Communication.Models
@using Newtonsoft.Json
@model BaseModel

@{
    ViewBag.Title = "Raise an alert";
}
<h1>Uh oh!</h1>
<p class="lead">
    Has something gone wrong? Select the services that are currently unavailable and enter a quick note to go along to all the
    subscribers. You'll get a reminder in 50 minutes to update the status of the outage so that all users can be kept up to date.
</p>
<form class="container-fluid" ng-controller="AlertsController" ng-submit="raiseAlert()">
    <div class="row" ng-repeat="group in groupedAlertables | orderBy:'Group'">
        <div class="col-md-12">
            <h4>{{group.Group}}</h4>
            <ul class="list-unstyled list-inline">
                @*TODO - Bootstrap Toggle breaks the Angular handler*@
                @*on-finish-render="toggelize()"*@
                <li ng-repeat="alertable in group.Alertables | orderBy:'Name'" ng-click="toggleAlertable(alertable, $event)" class="col-md-4" style="margin-bottom: 10px;">
                    <label class="checkbox-inline">
                        <input type="checkbox" />
                        {{alertable.Name}}
                    </label>
                </li>
            </ul>
        </div>
    </div>

    <div class="row">
        <div class="col-md-2">
            <label for="shortInfo">Short Info:</label>
        </div>
        <div class="col-md-8">
            <input type="text" id="shortInfo" class="form-control input-lg" ng-model="shortInfo" maxlength="140" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">
            <label for="longInfo">Long detail:</label>
        </div>
        <div class="col-md-8">
            <input type="text" id="longInfo" class="form-control input-lg" ng-model="longInfo" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">
            <label>Start/End:</label>
        </div>
        <div class="col-xs-1">
            <input type="checkbox" ng-model="scheduled" title="Scheduled?" />
        </div>
        <div class="col-xs-3">
            <input type="text" date-time-picker class="form-control" ng-model="start" ng-disabled="!scheduled" placeholder="STARTS NOW!!"/>
        </div>
        <div class="col-xs-3">
            <input type="text" date-time-picker class="form-control" ng-model="expectedFinish" placeholder="Hopefully Finished by.." />
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-10">
            <button type="submit" class="btn btn-primary btn-lg" ng-disabled="!isValid()">
                <i class="fa {{saving ? 'fa-spinner fa-pulse' : 'fa-bullhorn'}} "></i>
                Raise the alarm!
            </button>
        </div>
    </div>
</form>

@section styles {
    @Styles.Render("~/Content/jquery.datetimepicker")
    <style>
        div.row {
            margin-bottom: 2px;
        }

    </style>
}

@section scripts {
    @Scripts.Render("~/bundles/moment")
    @Scripts.Render("~/bundles/ui-bootstrap")
    @Scripts.Render("~/bundles/jquery.datetimepicker")
    
    <script type="text/javascript">
        var currentProfile = @Html.Raw(JsonConvert.SerializeObject(Model.CurrentProfile));

        angular.module('communicationApp', [])
            .directive('onFinishRender', function ($timeout) {
                return {
                    restrict: 'A',
                    link: function (scope, element, attr) {
                        if (scope.$last === true) {
                            scope.$evalAsync(attr.onFinishRender);
                        }
                    }
                }
            })
            .directive('dateTimePicker', function() {
                function link(scope, element, attrs) {
                    element.datetimepicker({
                        format: 'YYYY-MM-DD HH:mm',
                        step: 5
                    });
                }

                return {
                    link: link
                };
            })
          .controller('AlertsController', ['$scope', '$http', function ($scope, $http) {

            var dateTimeFormat = 'YYYY-MM-DD HH:mm';

            $scope.toggelize = function () {
                $('li label input').bootstrapToggle({
                    on: 'Yes',
                    off: 'No'
                });
            };

            $scope.start = null;
            $scope.$watch('scheduled', function(newValue, oldValue){
                if (newValue === false) {
                    $scope.start = null;
                } else if(newValue === true) {
                    $scope.start = moment().format(dateTimeFormat);
                }
            });

            $scope.isValid = function() {
                if($scope.selectedAlertables.length === 0 || !$scope.shortInfo) //Must select at least one ALertable and give a Short Info entry
                    return false;

                var now = moment();

                var start = now;

                if ($scope.scheduled) {
                    if(!$scope.start) //If marked as schedule, you must provide a Start Date/Time
                        return false;
                    
                    start = moment($scope.start);
                }

                var expectedFinish = $scope.expectedFinish ? moment($scope.expectedFinish) : now;
                if (!expectedFinish.isAfter(start) && !expectedFinish.isSame(start)) //Expected Finish must always be after Start
                    return false;


                return true;
            };

            $scope.selectedAlertables = [];

            

            $scope.isSelected = function(alertable) {
                return $scope.selectedAlertables.indexOf(alertable) > -1;
            }

            $scope.toggleAlertable = function(alertable, $event) {
                var checked = $event.target.checked;

                var index = $scope.selectedAlertables.indexOf(alertable);

                if (checked == false) { //Remove it, if it exists
                    if ($scope.isSelected(alertable) ) {
                        $scope.selectedAlertables.splice(index, 1);
                    }
                } else { //Add it, if it hasn't been already
                    if (!$scope.isSelected(alertable) ) {
                        $scope.selectedAlertables.push(alertable);
                    }
                }

                //console.log($scope.selectedAlertables);
            }

            $scope.saving = false;

            $scope.raiseAlert = function () {
                $scope.saving = true;
                  
                var alert = {
                    "AlertInfoShort": $scope.shortInfo,
                    "AlertDetail": $scope.longInfo,
                    "Alertables": $scope.selectedAlertables,
                    "Start": $scope.start,
                    "ExpectedFinish": $scope.expectedFinish,
                    "RaisedBy": currentProfile.Summary
                };

                $http.post('@Url.HttpRouteUrl("DefaultApi", new { action = "Raise", controller = "Alerts"})', JSON.stringify(alert))
                    .success(function (data) {
                        window.location = '@Url.Action("Status")';
                        $scope.saving = false;
                    })
                    .error(function(data) {
                        alert(data);
                        $scope.saving = false;
                });

            };

            $http.get('@Url.HttpRouteUrl("DefaultApi", new {action = "Get", controller = "Alertables"})').
                success(function (data) {
                    $scope.groupedAlertables = data;
                }).
                error(function () { $scope.groupedAlertables = ['No alertables were retrieved from the server']; });

          }]);

    </script>
}