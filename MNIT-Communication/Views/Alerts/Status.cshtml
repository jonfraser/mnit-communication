@using MNIT_Communication.Models
@using Newtonsoft.Json
@model BaseModel
@{
    ViewBag.Title = "Current Outages";
}
<h1>Current Outages</h1>

<form class="container-fluid" ng-controller="AlertsController">

    <p class="lead">{{outageDescription()}}</p>
    <h3>{{outageSummary()}}</h3>

    <p>
        <div class="btn-group">
            <label class="btn">Show</label>
            <button class="btn btn-info" ng-model="filter" btn-radio="filterType.Subscribed">Subscribed Only</button>
            <button class="btn btn-info" ng-model="filter" btn-radio="filterType.All">All Current</button>
            <label class="btn">Or</label>
            <button class="btn btn-success" ng-model="filter" btn-radio="filterType.Past" ng-click="getPastAlerts()">Past</button>
            <button class="btn btn-success" ng-model="filter" btn-radio="filterType.Scheduled" ng-click="getFutureAlerts()">Scheduled</button>
            <label class="btn">and Order By</label>
            <button class="btn btn-warning" ng-model="orderBy" btn-radio="orderType.Status">Status</button>
            <button class="btn btn-warning" ng-model="orderBy" btn-radio="orderType.Service">Service</button>
            <button class="btn btn-warning" ng-model="orderBy" btn-radio="orderType.Start">Onset Date</button>
            <button class="btn btn-warning" ng-model="orderBy" btn-radio="orderType.Update">Last Update</button>
        </div>
    </p>

    <div class="row" ng-show="outages.length > 0">
        <div class="col-md-12">
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>Service</th>
                        <th>Outage Start</th>
                        <th>Raised By</th>
                        <th>Description</th>
                        <th>Current Status</th>
                        <th>Last Updated</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr ng-repeat="outage in outages | filter: filter | orderBy: orderBy">
                        <td>{{outage.Service.Name}}</td>
                        <td>
                            <span am-time-ago="outage.Start" title="{{outage.Start | amDateFormat:'dddd, MMMM Do YYYY, h:mm:ss a'}}"></span>
                        </td>
                        <td>{{outage.RaisedBy.Name}}</td>
                        <td>{{outage.Summary}}</td>
                        <td>{{outage.LastUpdate.Display}}</td>
                        <td>
                            <span am-time-ago="outage.UpdateDate" title="{{outage.UpdateDate | amDateFormat:'dddd, MMMM Do YYYY, h:mm:ss a'}}"></span>
                        </td>
                        <td>
                            <button type="button" class="btn btn-default" data-toggle="modal" data-target="#detailsModal" ng-click="selectOutage(outage)">
                                <i class="fa fa-eye"></i> View
                            </button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</form>

<script type="text/ng-template" id="outageDetails.html">
    <div class="modal-header">
        <h3 class="modal-title">
            <button type="button" class="btn btn-{{historyButtonConfig().btn}} btn-sm" ng-model="addHistory" ng-disabled="!canAddHistory()" btn-checkbox btn-checkbox-true="true" btn-checkbox-false="false" title="{{historyButtonConfig().text}}">
                <i class="fa fa-{{historyButtonConfig().icon}}"></i>
            </button>
            {{ outage.Service.Name }} ({{outage.Start | amDateFormat:'dddd, MMMM Do YYYY, h:mm:ss a'}})
        </h3>
    </div>
    <div class="modal-body">
        <div class="row" ng-show="addHistory">
            <form class="form-horizontal">
                <div class="form-group">
                    <label for="Timestamp" class="col-sm-3 control-label">As of</label>
                    <div class="col-sm-6">
                        <p class="input-group">
                            <span class="input-group-btn">
                                <button type="button" class="btn btn-info" ng-click="now()">Now</button>
                            </span>
                           <input type="text" date-time-picker class="form-control" id="Timestamp"  ng-model="historyUpdate.Timestamp"/>
                        </p>
                    </div>

                </div>
                <div class="form-group">
                    <label for="Status" class="col-sm-3 control-label">Status</label>
                    <div class="col-sm-4">
                        <select ng-model="historyUpdate.Status" class="form-control" ng-options="status.Name for status in getStatuses() track by status.Name"></select>
                    </div>
                    <div class="col-sm-4">
                        <i class="fa fa-{{historyUpdate.Status.Icon}}"></i> 
                        {{historyUpdate.Status.Description}}
                    </div>
                </div>
                <div class="form-group">
                    <label for="Detail" class="col-sm-3 control-label">Details</label>
                    <div class="col-sm-7">
                        <textarea ng-model="historyUpdate.Detail" class="form-control" id="Detail" placeholder="What's new?"></textarea>
                    </div>
                </div>
            </form>
        </div>

        <table class="table table-striped table-hover" ng-show="!addHistory">
            <thead>
                <tr>
                    <th>Status</th>
                    <th>As of</th>
                    <th>Details</th>
                    <th>User</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr ng-repeat="history in outage.History">
                    <td>
                        {{history.Status.Name}}
                    </td>
                    <td>
                        <span am-time-ago="history.Timestamp" title="{{history.Timestamp | amDateFormat:'dddd, MMMM Do YYYY, h:mm:ss a'}}"></span>
                    </td>
                    <td>
                        {{history.Detail}}
                    </td>
                    <td>
                        {{history.UpdatedBy.Name}}
                    </td>
                    <td>
                        <button class="btn btn-default" title="Edit this update" ng-click="editHistory(history)" ng-show="canEditHistory(history)">
                            <i class="fa fa-pencil-square-o"></i>
                        </button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="modal-footer">
        <span ng-show="saveError !== ''" class="bg-danger">
            <b><i class="fa fa-frown-o"></i> {{saveError}}</b>
        </span>
        
        <button class="btn btn-primary" type="button" ng-click="ok()" ng-show="!addHistory">OK</button>
        <button class="btn btn-primary" type="button" ng-click="saveHistory()" ng-show="addHistory">
            <i class ="fa {{saving ? 'fa-spinner fa-pulse' : 'fa-floppy-o'}} "></i> Save Update
        </button>
        <button class="btn btn-warning" type="button" ng-click="ok()" ng-show="addHistory">Cancel</button>
    </div>
</script>

@section styles
{
    <style>
        /*As per http://angular-ui.github.io/bootstrap/#/getting_started*/
        .nav, .pagination, .carousel, .panel-title a { cursor: pointer; }
    </style>

    @Styles.Render("~/Content/jquery.datetimepicker")
}

@section scripts {
    @System.Web.Optimization.Scripts.Render("~/Scripts/jquery.signalR-2.2.0.min.js")
    <script src="~/signalr/hubs"></script>

    @Scripts.Render("~/bundles/moment")
    @Scripts.Render("~/bundles/ui-bootstrap")
    @Scripts.Render("~/bundles/jquery.datetimepicker")

    <script type="text/javascript">
        var currentProfile = @Html.Raw(JsonConvert.SerializeObject(Model.CurrentProfile));

        var alertStatus = {
            Scheduled: 'Scheduled',
            Raised: 'Raised',
            Updated: 'Updated',
            Cancelled: 'Cancelled',
            Resolved: 'Resolved'
        }

        angular.module('communicationApp', ['angularMoment', 'ui.bootstrap'])
            .directive('dateTimePicker', function() {
                function link(scope, element, attrs) {
                    element.datetimepicker({
                        format: 'YYYY-MM-DD HH:mm',
                        step: 5
                    });
                }

                return {
                    link: link
                };
            })
            .filter('getById', function() {
                return function(data, id) {
                    for (var i in data) {
                        if (data.hasOwnProperty(i)) {
                            var item = data[i];
                            if (item.Id === id)
                                return item;
                        }
                    }
                    return null;
                }
            })
            .filter('scheduledAlertFilter', function() {
                return function(alerts) {
                    for (var i in alerts) {
                        if (alerts.hasOwnProperty(i)) {
                            var alert = alerts[i];
                            if (alert)
                                return alert;
                        }
                    }
                    return null;
                }
            })
            .filter('pastAlertFilter', function() {
                return function(alerts) {
                    for (var i in alerts) {
                        if (alerts.hasOwnProperty(i)) {
                            var alert = alerts[i];
                            if (!alert)
                                return alert;
                        }
                    }
                    return null;
                }
            })
            .controller('AlertsController', [
                '$scope', '$http', '$filter', '$modal', function($scope, $http, $filter, $modal) {
                    $scope.outages = [];

                    $scope.filterType = {
                        All: { IsCurrent: true },
                        Subscribed: { UserSubscribed: true },
                        Scheduled: { IsFuture: true },
                        Past: { IsPast: true }
                    }

                    $scope.orderType = {
                        Service: 'Service.Name',
                        Status: 'LastUpdate.Status.Order',
                        Start: '-Start',
                        Update: '-UpdateDate'
                    }

                    $scope.filter = $scope.filterType.Subscribed;
                    $scope.orderBy = $scope.orderType.Service;

                    $scope.outageSummary = function() {
                        if ($scope.outages.length === 0) {
                            return "Awesome! There aren't any outages at the moment!";
                        }
                        return "";
                    }

                    $scope.outageDescription = function() {
                        if ($scope.outages.length > 0) {
                            return "Listed below are all the currently known outages and latest update. Rest assured we are working hard to restore service and you'll be notified as soon as things are back to normal.";
                        }

                        return "";
                    }

                    $scope.selectOutage = function(outage) {
                        var modalInstance = $modal.open({
                            animation: true,
                            size: 'lg',
                            templateUrl: 'outageDetails.html',
                            controller: 'OutageDetailsController',
                            resolve: {
                                outage: function() {
                                    return outage;
                                },
                                currentProfile: function() {
                                    return currentProfile;
                                },
                                alertStatus: function() {
                                    return alertStatus;
                                }
                            }
                        });

                        modalInstance.result.then(function(selectedItem) {
                            $scope.selected = selectedItem;
                        }, function() {
                            console.log('Modal dismissed at: ' + new Date());
                        });
                    }

                    var pastAlertsLoaded = false;
                    $scope.getPastAlerts = function() {
                        if(pastAlertsLoaded)
                            return;
                        
                        $http.get('@Url.HttpRouteUrl("DefaultApi", new {action = "GetPast", controller = "Alerts"})').
                        success(function(data) {
                            data = data || [];
                            $scope.outages = $scope.outages.concat(data);
                                pastAlertsLoaded = true;
                            }).
                        error(function() {

                        })
                        .finally(function() {
                            //no-op
                        });
                    }
                    
                    var futureAlertsLoaded = false;
                    $scope.getFutureAlerts = function() {
                        if(futureAlertsLoaded)
                            return;
                        
                        $http.get('@Url.HttpRouteUrl("DefaultApi", new {action = "GetFuture", controller = "Alerts"})').
                        success(function(data) {
                            data = data || [];
                            $scope.outages = $scope.outages.concat(data);
                            futureAlertsLoaded = true;
                        }).
                        error(function() {

                        })
                        .finally(function() {
                            //no-op
                        });
                    }

                    //Perform initial load of Current Alerts
                    $http.get('@Url.HttpRouteUrl("DefaultApi", new {action = "Get", controller = "Alerts"})').
                        success(function(data) {
                            $scope.outages = data || [];
                        }).
                        error(function() {
                            $scope.outages = [];
                        })
                        .finally(function() {
                            //no-op
                        });




                    var outageHub = $.connection.outageHub;
                    outageHub.client.notifyChange = function(outageDetail) {
                        var status = outageDetail.LastUpdate.Status.Name;

                        var existing = $filter('getById')($scope.outages, outageDetail.Id);
                        
                        if (existing != null) {
                            existing.LastUpdate = outageDetail.LastUpdate;
                            existing.History = outageDetail.History;
                            existing.UpdateDate = outageDetail.UpdateDate;
                            existing.IsCurrent = outageDetail.IsCurrent;
                            existing.IsPast = outageDetail.IsPast;
                            existing.IsFuture = outageDetail.IsFuture;
                        } else {
                            outageDetail.UserSubscribed = currentProfile.AlertSubscriptions.indexOf(outageDetail.Service.Id) > -1;
                            $scope.outages.push(outageDetail);
                        }

                        $scope.$apply();
                    };
                    $.connection.hub.start();
                }
            ])
            .controller('OutageDetailsController', function($scope, $http, $modalInstance, outage, currentProfile, alertStatus) {
                $scope.outage = outage;
                $scope.currentProfile = currentProfile;

                var dateTimeFormat = 'YYYY-MM-DD HH:mm';

                $scope.statuses = [//TODO - get these values from the application via AJAX?
                    { Name: 'Updated', Description: 'Provides an update for this alert/outage', Icon: 'pencil-square-o' },
                    { Name: 'Cancelled', Description: 'Marks this alert/outage as cancelled', Icon: 'close' },
                    { Name: 'Resolved', Description: 'This outage is now resolved', Icon: 'smile-o' }
                ];

                $scope.getStatuses = function() {
                    if (outage.IsFuture) {
                        return [$scope.statuses[1]]; //Cancelled
                    } else {
                        return $scope.statuses;
                    }
                }

                $scope.addHistory = false;

                $scope.canAddHistory = function() {
                    if (!$scope.currentProfile.IsAdmin)
                        return false;
                    
                    if (outage.IsPast)
                        return false;

                    return true;
                };

                $scope.historyUpdate = {
                    Timestamp: moment().format(dateTimeFormat),
                    Status: $scope.statuses[0], //Updated
                    Detail: '',
                    UpdatedBy: currentProfile.Summary
                }

                $scope.historyButtonConfig = function() {
                    if ($scope.addHistory) {
                        return {
                            icon: 'undo',
                            text: 'Cancel Update',
                            btn: 'danger'
                        }
                    } else {
                        return {
                            icon: 'plus-square',
                            text: 'Add Update',
                            btn: 'success'
                        }
                    }
                }

                $scope.canEditHistory = function(history) {
                    if (!currentProfile.IsAdmin) {
                        return false;
                    }

                    if (history.Status.Name === alertStatus.Raised) {
                        return false;
                    }

                    return true;
                }

                $scope.editHistory = function(history) {
                    $scope.addHistory = true;
                    $scope.historyUpdate = history;
                    $scope.historyUpdate.Timestamp = moment($scope.historyUpdate.Timestamp).format(dateTimeFormat);
                };

                $scope.saving = false;
                $scope.saveError = '';

                $scope.saveHistory = function() {
                    $scope.saving = true;
                    $scope.saveError = '';

                    var url = '@Url.HttpRouteUrl("DefaultApi", new {action = "Update", controller = "Alerts"})';

                var data = {
                    alertId: outage.Id,
                    update: $scope.historyUpdate
                }

                $http.post(url, data).
                    success(function() {
                        $scope.saving = false;
                        $scope.saveError = '';
                        $scope.ok();
                    }).
                    error(function() {
                        $scope.saving = false;
                        $scope.saveError = 'Error while performing update..Please try again!';
                    })
                    .finally(function() {
                        //no-op
                    });
            };

            $scope.now = function() {
                $scope.historyUpdate.Timestamp = moment().format(dateTimeFormat);
            };

            $scope.ok = function() {
                $modalInstance.close($scope.outage);
            };
        });
    </script>
}
