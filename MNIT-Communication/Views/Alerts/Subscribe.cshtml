@model Guid?
@{
    ViewBag.Title = "Select your alerts";
    var newUserRegistrationId = string.Empty;
    if(ViewBag.NewUser)
    {
        newUserRegistrationId = string.Format("'{0}'", Model.Value.ToString());
    }
}
<h1>Select some alerts</h1>
@if (ViewBag.NewUser)
{
    <p class="lead">
        We've sent an email to your @@health to confirm your account creation, but before you go and do that spend a moment to select the
        items that you would like to be alerted on when there are outages.
    </p>
}

<form class="container-fluid" ng-controller="AlertsController" ng-submit="registerAlerts(@newUserRegistrationId)">
    <div class="row">
        <div class="col-md-12">
            <h4>Sites</h4>
            <ul class="list-unstyled list-inline">
                <li ng-repeat="alertable in siteAlertables | orderBy:'Name'" on-finish-render="toggelize()" class="col-md-4" style="margin-bottom:10px;">
                    <label class="checkbox-inline">
                        <input type="checkbox" />
                        {{alertable.Name}}
                    </label>
                </li>
            </ul>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <h4>Applications</h4>
            <ul class="list-unstyled list-inline">
                <li ng-repeat="alertable in appAlertables | orderBy:'Name'" on-finish-render="toggelize()" class="col-md-4" style="margin-bottom:10px;">
                    <label class="checkbox-inline">
                        <input type="checkbox" />
                        {{alertable.Name}}
                    </label>
                </li>
            </ul>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <h4>Interfaces</h4>
            <ul class="list-unstyled list-inline">
                <li ng-repeat="alertable in interfaceAlertables | orderBy:'Name'" on-finish-render="toggelize()" class="col-md-4" style="margin-bottom:10px;">
                    <label class="checkbox-inline">
                        <input type="checkbox" />
                        {{alertable.Name}}
                    </label>
                </li>
            </ul>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <h4>Servers</h4>
            <ul class="list-unstyled list-inline">
                <li ng-repeat="alertable in svrAlertables | orderBy:'Name'" on-finish-render="toggelize()" class="col-md-4" style="margin-bottom:10px;">
                    <label class="checkbox-inline">
                        <input type="checkbox" />
                        {{alertable.Name}}
                    </label>
                </li>
            </ul>
        </div>
    </div>
    <div class="row">
        <div class="col-md-10">
            <button type="submit" class="btn btn-primary btn-lg">Ok, got it; these are the alerts I want &raquo;</button>
        </div>
    </div>
</form>

@section scripts {
    <script type="text/javascript">
        angular.module('communicationApp', [])
            .directive('onFinishRender', function ($timeout) {
                return {
                    restrict: 'A',
                    link: function (scope, element, attr) {
                        if (scope.$last === true) {
                            scope.$evalAsync(attr.onFinishRender);
                        }
                    }
                }
            })
          .controller('AlertsController', ['$scope', '$http', function ($scope, $http) {

              $scope.toggelize = function () {
                  $('li label input').bootstrapToggle({
                      on: 'Yes',
                      off: 'No'
                  });
              };

              $scope.registerAlerts = function (newUserRegistrationId) {
                  var data = {
                      "userId": newUserRegistrationId,
                      //TODO - replace hardcoded Alert ID with values from Angular Model
                      "alertables": ['440394b8-8b90-46dd-bf13-a420a4358cc2']
                  };
                  $http.post('@Url.HttpRouteUrl("DefaultApi", new { action = "Subscribe", controller = "Alerts"})',
                      JSON.stringify(data)).
                    success(function (data) {
                        if (@ViewBag.newUserJS == true) {
                            window.location = "/Alerts/NewUserDone/" + data;
                        }
                    }).
                    error(function (data) { alert(data); });

              };

              $http.get('@Url.HttpRouteUrl("DefaultApi", new { action = "Get", controller = "Alertables", groupName = "Sites"})').
                    success(function (data) {
                        $scope.siteAlertables = data;
                    }).
                    error(function () { $scope.appAlertables = ['No site alertables were retrieved from the server'] });

              $http.get('@Url.HttpRouteUrl("DefaultApi", new { action = "Get", controller = "Alertables", groupName = "Applications"})').
                    success(function (data) {
                        $scope.appAlertables = data;
                    }).
                    error(function () { $scope.appAlertables = ['No application alertables were retrieved from the server']});

              $http.get('@Url.HttpRouteUrl("DefaultApi", new { action = "Get", controller = "Alertables", groupName = "Interfaces"})').
                                  success(function (data) {
                                      $scope.interfaceAlertables = data;
                                  }).
                                  error(function () { $scope.interfaceAlertables = ['No interface alertables were retrieved from the server'] });

              $http.get('@Url.HttpRouteUrl("DefaultApi", new { action = "Get", controller = "Alertables", groupName = "Servers"})').
                    success(function (data) {
                        $scope.svrAlertables = data;
                    }).
                    error(function () { $scope.svrAlertables = ['No server alertables were retrieved from the server'] });

          }]);

    </script>
}