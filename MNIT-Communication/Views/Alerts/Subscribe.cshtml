@using MNIT_Communication.Models
@using MNIT_Communication.Domain
@model BaseModel<UserProfile>
@{
    ViewBag.Title = "Select your alerts";
}
<h1>Select some alerts</h1>
@if (!Model.Data.Confirmed)
{
    <p class="lead">
        We've sent an email to your @@health to confirm your account creation, but before you go and do that spend a moment to select the
        items that you would like to be alerted on when there are outages.
    </p>
}

<form class="container-fluid" ng-controller="AlertsController" ng-submit="registerAlerts('@Model.Data.Id')">

    <div class="row" ng-repeat="group in groupedAlertables | orderBy:'Group'">
        <div class="col-md-12">
            <h4>{{group.Group}}</h4>
            <ul class="list-unstyled list-inline">
                @*TODO - Bootstrap Toggle breaks the Angular handler*@
                @*on-finish-render="toggelize()"*@
                <li ng-repeat="alertable in group.Alertables | orderBy:'Name'" class=" col-md-4" style="margin-bottom:10px;">
                    <label class="checkbox-inline">
                        <input type="checkbox" ng-checked="isSelected(alertable)" ng-click="toggleAlertable(alertable, $event)" />
                        {{alertable.Name}}
                    </label>
                </li>
            </ul>
        </div>
    </div>
    <div class="row">
        <div class="col-md-10">
            <button type="submit" class="btn btn-primary btn-lg">
                <i class="fa {{saving ? 'fa-spinner fa-pulse' : 'fa-bell-o'}} "></i>
                Ok, got it; these are the alerts I want &raquo;</button>
        </div>
    </div>
</form>

@section scripts {
    <script type="text/javascript">
    var userConfirmed = @Model.UserConfirmed.ToString().ToLower();

    angular.module('communicationApp', [])
        .directive('onFinishRender', function($timeout) {
            return {
                restrict: 'A',
                link: function(scope, element, attr) {
                    if (scope.$last === true) {
                        scope.$evalAsync(attr.onFinishRender);
                    }
                }
            }
        })
        .controller('AlertsController', [
            '$scope', '$http', function($scope, $http) {

                $scope.toggelize = function(alertable) {
                    var input = $('li label input');
                    
                    input.bootstrapToggle({
                        on: 'Yes',
                        off: 'No'
                    });

                };

                $scope.selectedAlertables = [@Html.Raw(string.Join(",", Model.CurrentProfile.AlertSubscriptions.Select(a => "'" + a + "'")))];
                //$scope.selectedAlertables = [];

                $scope.isSelected = function(alertable) {
                    return $scope.selectedAlertables.indexOf(alertable.Id) > -1;
                }

                $scope.toggleAlertable = function(alertable, $event) {
                    var checked = $event.target.checked;

                    var index = $scope.selectedAlertables.indexOf(alertable.Id);

                    if (checked == false) { //Remove it, if it exists
                        if ($scope.isSelected(alertable) ) {
                            $scope.selectedAlertables.splice(index, 1);
                        }
                    } else { //Add it, if it hasn't been already
                        if (!$scope.isSelected(alertable) ) {
                            $scope.selectedAlertables.push(alertable.Id);
                        }
                    }

                    //console.log($scope.selectedAlertables);
                }
                $scope.saving = false;

                $scope.registerAlerts = function(userId) {
                    $scope.saving = true;
                    var data = {
                        "userId": userId,
                        "alertables": $scope.selectedAlertables
                    };
                    $http.post('@Url.HttpRouteUrl("DefaultApi", new {action = "Subscribe", controller = "Alerts"})',
                        JSON.stringify(data)).
                    success(function(data) {
                        if (userConfirmed === false) {
                            window.location = "/Account/NewUserDone/" + data;
                        } else {
                            window.location = "/"; //Home
                        }
                        $scope.saving = false;
                    }).
                    error(function(data) { 
                        alert(data); 
                        $scope.saving = false;
                    });
            };

            $http.get('@Url.HttpRouteUrl("DefaultApi", new {action = "Get", controller = "Alertables"})').
                success(function(data) {
                    $scope.groupedAlertables = data;
                }).
                error(function() { $scope.groupedAlertables = ['No alertables were retrieved from the server']; });
            }
        ]);

    </script>
}