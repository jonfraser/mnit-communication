@model Guid
@using Microsoft.Owin.Security

@{
    ViewBag.Title = "Link an external account";
    var newUserRegistrationId = string.Format("'{0}'", Model.ToString());
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
}
<h1>How will we contact you?</h1>
<p class="lead">
    To allow us to get alerts to you even when the internal QH network is down, we need an external account with an email
    address to link your account up to (this also gives you extra security).
</p>
<p class="lead">
    Please login with one of the following providers.
</p>
@using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Url.Action("SetUserProfile", "Account", new { id = Model }) }))
{
    @Html.AntiForgeryToken()
    <div id="socialLoginList">
        <p>
            @foreach (AuthenticationDescription p in loginProviders)
            {
                <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.Caption</button>
            }
        </p>
    </div>
}